#
# TODOs:
# - Configure uma rede interna para os 3 containers se comnuicarem
# - Configure os volumes para que os dados se tornem persistentes
# - Configure as variáveis de ambiente definadas em .env nos containers necessário, use ${nome_da_variavel} para expandi-la
# 
# Endereço da aplicação: http://localhost:3000/setup
#
# Importante: o caminho para armazenar dados no postgres é /var/lib/postgres/data


services:
  app-postgres:
    image: postgres:13
    container_name: app-postgres
    restart: unless-stopped
    networks:
      - network1
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - app-postgres-volume:/var/lib/postgres/data
    environment:
      POSTGRES_USER: ${APP_DB_USER}
      POSTGRES_PASSWORD: ${APP_DB_PASSWORD}
      POSTGRES_DB: ${APP_DB_NAME}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${APP_DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  metabase-postgres:
    image: postgres:13 
    container_name: metabase-postgres
    restart: unless-stopped
    volumes:
      - metabase-postgres:/var/lib/postgres/data
    environment:
      POSTGRES_USER: ${METABASE_DB_USER}
      POSTGRES_PASSWORD: ${METABASE_DB_PASSWORD}
      POSTGRES_DB: ${METABASE_DB_NAME}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${METABASE_DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  metabase:
    image: metabase/metabase:latest
    container_name: metabase-app
    restart: unless-stopped
    networks:
      - network1
    depends_on:
      metabase-postgres:
        condition: service_healthy
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${METABASE_DB_NAME}
      MB_DB_PORT: 5432
      MB_DB_USER: ${METABASE_DB_USER}
      MB_DB_PASS: ${METABASE_DB_PASSWORD}
      MB_DB_HOST: metabase-postgres
    volumes:
      - metabase_data:/metabase-data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  data-generator:
    build:
      context: ./data-generator
    networks: 
      - network1
    container_name: metabase-data-generator
    restart: unless-stopped
    depends_on:
      app-postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: app-postgres
      POSTGRES_DB: ${APP_DB_NAME}
      POSTGRES_USER: ${APP_DB_USER}
      POSTGRES_PASSWORD: ${APP_DB_PASSWORD}
      DATA_GENERATION_INTERVAL: 60

  nginx:
    build:
      context: ./nginx
    networks:
      - network1
    container_name: metabase-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      metabase:
        condition: service_healthy

networks:
  network1:
    driver: bridge

volumes:
  app-postgres-volume:
  metabase-postgres:
  metabase_data:
